{"version":3,"sources":["assets/message.mp3","assets/starttune.mp3","assets/trading.jpg","components/Popup.js","components/Modal/Modal.js","components/reuseable/BidderLotComponent.js","components/reuseable/LotListComponent.js","pages/auction/Bidders.js","pages/Bidders.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["Popup","isOpen","onClose","className","src","trading","width","alt","ModalBroker","props","closeOnEscapeKeyDown","e","charCode","keyCode","useEffect","document","body","addEventListener","removeEventListener","_jsx","_Fragment","children","CSSTransition","in","show","unmountOnExit","timeout","enter","exit","onClick","_jsxs","stopPropagation","title","scope","filteredData","map","el","index","lot","factory_name","maximum_bid","buyer_name","sold_status","BidderLotComponent","_ref","handleKeyPress","uId","shareBid","openShareBid","sl","time","users","manualmode","formatTime","selectedIndex","handleInputChange","addBid","handleInc","disabledButtons","setSelectedIndex","setManualmode","invoice","grade","style","color","lirating_name","lrating_name","price","concat","pkgs","buyer","link_id","autoComplete","type","id","name","value","onKeyPress","event","onChange","Number","backgroundColor","fontSize","s_buyer","s_buyer_name","disabled","FaHandPaper","includes","LotListComponent","list","startIndex","endIndex","slice","socket","io","connect","process","Bidders","useNavigate","_useState","useState","_useState2","_slicedToArray","setShow","API_URL","dispatch","useDispatch","auction_data","useSelector","state","auction","usersString","localStorage","getItem","JSON","parse","_useState3","_useState4","amountBid","setAmountbid","_useState5","_useState6","setManualbidindex","_useState7","_useState8","checkedItemName","setCheckedItemName","_useState9","_useState10","checkedItemid","setCheckedItemid","_useState11","_useState12","activebroker","setActivebroker","_useState13","_useState14","setList","_useState15","_useState16","rawlist","setrawList","_useState17","_useState18","setbuttonLoading","_useState19","_useState20","setDisabledButtons","_useState21","_useState22","_useState23","_useState24","setStartIndex","_useState25","_useState26","setEndIndex","_useState27","_useState28","activeUsers","setActiveUsers","_useState29","_useState30","setVisible","_useState31","_useState32","showPopup","setShowPopup","_useState33","_useState34","setTime","_useState35","_useState36","isRunning","setIsRunning","_useState37","_useState38","loading","setLoading","_useState39","_useState40","bidloading","setbidLoading","_useState41","_useState42","openLot","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","then","response","emit","data","current_brokers","catch","error","console","log","getAllcatalogue","stop","apply","arguments","_ref2","_callee2","_amountBid$index","mxbid","eligiblebid","bidValue","bidsToUpdate","_context2","abrupt","alert","bid","put","t0","_x","_x2","handleFetchData","debounce","handleVisibilityChange","visibilityState","currentPage","Math","floor","_ref3","_callee3","audio","updatedData","_context3","prevDisabledButtons","_toConsumableArray","Audio","music","obj","idx","_objectSpread","key","filter","item","play","btnIndex","finish","_x3","_x4","handleActiveUsers","count","handleStartIndex","handleEndIndex","fetchLatestMessage","on","message","setMessages","off","fetchData","_ref4","_callee4","isMounted","_response$data$","_context4","sent","Promise","all","userId","hidden","timer","setInterval","disconnect","clearInterval","setTimeout","handleStart","handleStop","handleTimeUpdate","newTime","notify","_ref5","_ref6","intervalId","throttledTick","throttle","minutes","toString","padStart","seconds","filteredDatabrokers","brokers","_useState43","_useState44","messages","_useState45","_useState46","setMessage","height","display","flexDirection","justifyContent","alignItems","ReactLoading","marginTop","fontWeight","Modal","length","date","sale_no","season","short_name","htmlFor","target","placeholder","preventDefault","post","handleMessageSubmit","padding","u_id","payload","_event$target","prevState","updatedState","_defineProperty","history","token","sessionStorage","ViewList","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread2","i","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty"],"mappings":"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","file":"static/js/6.966111f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/message.17f316c9.mp3\";","export default __webpack_public_path__ + \"static/media/starttune.99619dc2.mp3\";","export default __webpack_public_path__ + \"static/media/trading.c31da198.jpg\";","import React from 'react';\r\nimport './Popup.css';\r\nimport trading from '../assets/trading.jpg'\r\nfunction Popup({ isOpen, onClose }) {\r\n\r\n\r\n  return (\r\n  <div className=\"trading container d-flex justify-content-center align-items-center vh-100\">\r\n  <div className=\"text-center\">\r\n    <img src={trading} width=\"50%\" alt=\"Image\" className=\"img-fluid\" />\r\n    <h2 className=\"mt-3\">Trading has not yet started!!</h2>\r\n    <p className=\"lead\">Please be advised that trading has not yet begun for the day. If you are attempting to place a trade, please wait until trading commences before doing so. Thank you for your patience and understanding.</p>\r\n    {/* <button className=\"btn btn-primary\">Learn More</button> */}\r\n  </div>\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","import React, { useEffect } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./Modal.css\";\r\n\r\n\r\nconst ModalBroker = (props) => {\r\n\r\n  // console.log(props);\r\n  const closeOnEscapeKeyDown = e => {\r\n    if ((e.charCode || e.keyCode) === 27) {\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    return function cleanup() {\r\n      document.body.removeEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    };\r\n  }, []);\r\n\r\nreturn(\r\n    <>\r\n    <CSSTransition\r\n      in={props.show}\r\n      unmountOnExit\r\n      timeout={{ enter: 0, exit: 300 }}\r\n    >\r\n      <div className=\"modal\" onClick={props.onClose}>\r\n        <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"modal-header\">\r\n            <h4 className=\"modal-title\">{props.title}</h4>\r\n\r\n           \r\n          </div>\r\n          <div className=\"modal-body\">\r\n\r\n\r\n          <table className=\"modaltable table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Lot</th>\r\n              <th scope=\"col\">Factory</th>\r\n              <th scope=\"col\">Price</th>\r\n              <th scope=\"col\">Bidder</th>\r\n              <th scope=\"col\">Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.filteredData.map((el, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td ><h4>{index + 1}</h4></td>\r\n                  <td><h4>{el.lot}</h4></td>\r\n                  <td><h4>{el.factory_name}</h4></td>\r\n                  <td><h4>{el.maximum_bid}</h4></td>\r\n                  <td><h4>{el.buyer_name}</h4></td>\r\n                  <td>\r\n                    <span className={el.sold_status === 1 ? \"hname\" : el.sold_status === 0 ? \"rname\" : \"rname\"}>\r\n                      {el.sold_status === 1 ? \"Sold\" :  el.sold_status === 0 ?\"Unsold\":\"Pending\"}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button onClick={props.onClose} className=\"btn btn-danger\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ModalBroker;\r\n","import React from \"react\";\r\nimport {\r\n  FaHandPaper,\r\n  FaRegWindowClose,\r\n  FaRegCheckSquare,\r\n} from \"react-icons/fa\";\r\nconst BidderLotComponent = ({\r\n  handleKeyPress,\r\n  uId,\r\n  openShareBid,\r\n  shareBid,\r\n  sl,\r\n  index,\r\n  time,\r\n  el,\r\n  users,\r\n  formatTime,\r\n  manualmode,\r\n  selectedIndex,\r\n  handleInputChange,\r\n  addBid,\r\n  handleInc,\r\n  disabledButtons,\r\n  setSelectedIndex,\r\n  setManualmode,\r\n}) => {\r\n  return (\r\n    <>\r\n    <tr>\r\n      <td className=\"text-center\">\r\n        {el.lot}\r\n        <br />\r\n        {el.invoice}\r\n      </td>\r\n      <td className=\"text-center\">\r\n        {el.factory_name}\r\n        <br />\r\n        ({el.grade}) Rating: <span style={{ color: 'purple' }}>({el.lirating_name})</span>\r\n<span style={{ color: 'navy' }}>({el.lrating_name})</span>\r\n      </td>\r\n      <td className=\"text-center\">\r\n        {el.price}\r\n        <br />\r\n        {`(${el.pkgs})`}\r\n      </td>\r\n      \r\n<td className=\"text-center\">\r\n{el.maximum_bid !== 0 &&(\r\n  <div className=\"bidd_name\">\r\n              <p className=\"highest\">{el.maximum_bid}</p>\r\n              <span className={el.buyer == users.link_id ? \"hname\" : \"rname\"}>\r\n                {el.buyer_name}({el.maximum_bid - el.price})\r\n              </span>\r\n            </div>\r\n)}\r\n      \r\n           \r\n            <br />\r\n</td>\r\n      <td className=\"text-center\">\r\n        {manualmode === true && selectedIndex === index ? (\r\n          <div className=\"mn-bid col-12\">\r\n            <input\r\n              className=\"form-control m_bid\"\r\n              autoComplete=\"off\"\r\n              type=\"number\"\r\n              id={`name${el.id}`}\r\n              name=\"name\"\r\n              value={el.name}\r\n              onKeyPress={(event) => handleKeyPress(el,event, index)}\r\n              onChange={(e) => handleInputChange(e, index)}\r\n            />\r\n          </div>\r\n        ) : el.maximum_bid === 0 ? (\r\n          <div className=\"mn-bid col-12\">\r\n            {/* <h5 className=\"card-price\">Max.{el.maximum_bid}</h5> */}\r\n            <input\r\n              className=\"form-control m_bid\"\r\n              autoComplete=\"off\"\r\n              type=\"number\"\r\n              id={`name${el.id}`}\r\n              name=\"name\"\r\n              value={el.name}\r\n              onChange={(e) => handleInputChange(e, index)}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <>\r\n           \r\n          </>\r\n        )}\r\n      </td>\r\n \r\n<td className=\"text-center\">\r\n{Number(el.pkgs) > 15 && el.buyer !== 0 && el.buyer !== uId ? (\r\n  <i\r\n    key={el.id}\r\n    onClick={() => shareBid(el.id)}\r\n    className=\"bi bi-share\"\r\n    style={{ backgroundColor: 'blue', color: 'white', fontSize: '14px' }}\r\n  ></i>\r\n) : null}\r\n{Number(el.pkgs) > 15 && el.s_buyer !== 0 && el.buyer !== uId && el.maximum_bid !== 0 && (\r\n  <div className=\"bidd_name\">\r\n    {/* <p className=\"highest\">{el.maximum_bid}</p> */}\r\n    <span className=\"sname\">\r\n      {el.s_buyer_name}({el.maximum_bid - el.price})\r\n    </span>\r\n  </div>\r\n)}\r\n\r\n\r\n\r\n{/* {el.open_share === 0 ? (\r\n            <button key={el.id} onClick={() => openShareBid(el.id)} type=\"\">\r\n              open share\r\n            </button>\r\n          ) : null} */}\r\n</td>\r\n      <td className=\"text-center\" >\r\n        {el.maximum_bid === 0 ? (\r\n          <button\r\n            key={el.id + 10}\r\n            disabled={users.type === \"BIDDER\" ? false : true}\r\n            onClick={() => addBid(el, index)}\r\n            className=\"btn btn-danger square-circle\"\r\n          >\r\n            <FaHandPaper className=\"bid\" />\r\n          </button>\r\n        ) : (\r\n          <div className=\"col-12 \">\r\n            <div className=\"bidcont mb-2 d-flex justify-content-center\">\r\n              {el.sold_status === 1 ? (\r\n                <>\r\n                  <p className=\"sold_st\">SOLD</p>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <button\r\n                    key={el.id + 11}\r\n                    disabled={disabledButtons.includes(index)}\r\n                    onClick={() => handleInc(el, index)}\r\n                    className=\" btn-danger square-circle bidbtn\"\r\n                  >\r\n                    +1\r\n                  </button>\r\n                  <button\r\n                    key={el.id}\r\n                    onClick={() => {\r\n                      if (manualmode === true && selectedIndex === index) {\r\n                        addBid(el, index);\r\n                      } else {\r\n                        setManualmode(true);\r\n                        setSelectedIndex(index);\r\n                      }\r\n                    }}\r\n                    className=\" btn-primary square-circle bidbtn\"\r\n                    style={{ fontSize: '10px' }}\r\n                  >\r\n                    <FaHandPaper className=\"bid\" />\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </td>\r\n    </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BidderLotComponent;\r\n","import React from 'react'\r\nimport BidderLotComponent from './BidderLotComponent';\r\nconst LotListComponent = ({\r\n  handleKeyPress,\r\n  uId,\r\n  shareBid,\r\n  openShareBid,\r\n    time,\r\n    list,\r\n    startIndex,\r\n    endIndex,\r\n    users,\r\n    formatTime,\r\n    manualmode,\r\n    selectedIndex,\r\n    handleInputChange,\r\n    addBid,\r\n    handleInc,\r\n    disabledButtons,\r\n    setManualmode,\r\n    setSelectedIndex\r\n  }) => {\r\n    return (\r\n       <>\r\n     \r\n          {list.slice(startIndex, endIndex + 3).map((el, index) => (\r\n            <BidderLotComponent\r\n            handleKeyPress={handleKeyPress}\r\n            uId={uId}\r\n            openShareBid={openShareBid}\r\n            sl={startIndex + index + 1}\r\n            time={time}\r\n            shareBid={shareBid}\r\n              key={el.id + 9}\r\n              el={el}\r\n              index={index}\r\n              setManualmode={setManualmode}\r\n              setSelectedIndex={setSelectedIndex}\r\n              users={users}\r\n              formatTime={formatTime}\r\n              manualmode={manualmode}\r\n              selectedIndex={selectedIndex}\r\n              handleInputChange={handleInputChange}\r\n              addBid={addBid}\r\n              handleInc={handleInc}\r\n              disabledButtons={disabledButtons}\r\n            />\r\n          ))}\r\n      </>\r\n    );\r\n  };\r\n  \r\n\r\nexport default LotListComponent","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Popup from \"../../components/Popup\";\r\nimport axios from \"axios\";\r\nimport music from \"../../assets/message.mp3\";\r\nimport notify from \"../../assets/starttune.mp3\";\r\nimport { getAllcatalogue } from \"../../store/catalogueSlice\";\r\nimport io from \"socket.io-client\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { throttle,debounce } from \"lodash\";\r\nimport LotListComponent from \"../../components/reuseable/LotListComponent\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaSun, FaCloud } from \"react-icons/fa\";\r\nconst socket = io.connect(process.env.REACT_APP_SERVER_URL);\r\nconst Bidders = () => {\r\n  const navigate = useNavigate();\r\n  const [show, setShow] = useState(false);\r\n  const API_URL = process.env.REACT_APP_SERVER_URL;\r\n  const dispatch = useDispatch();\r\n  const { auction_data } = useSelector((state) => state.auction);\r\n  const usersString = localStorage.getItem(\"users\");\r\n  const users = JSON.parse(usersString);\r\n  const [amountBid, setAmountbid] = useState([]);\r\n  const [manualbidIndex, setManualbidindex] = useState(\"\");\r\n  const [checkedItemName, setCheckedItemName] = useState(\"\");\r\n  const [checkedItemid, setCheckedItemid] = useState(\"\");\r\n  const [activebroker, setActivebroker] = useState();\r\n  const [list, setList] = useState([]);\r\n  const [rawlist, setrawList] = useState([]);\r\n  const [buttonLoading, setbuttonLoading] = useState(false);\r\n  const [disabledButtons, setDisabledButtons] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [startIndex, setStartIndex] = useState(0);\r\n  const [endIndex, setEndIndex] = useState(1);\r\n  const [activeUsers, setActiveUsers] = useState(0);\r\n  const [visible, setVisible] = useState(false);\r\n  const [showPopup, setShowPopup] = useState(true);\r\n  const [time, setTime] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [bidloading, setbidLoading] = useState(false);\r\n  const [manualmode, setManualmode] = useState(false);\r\n\r\n  //manual bid inpput data get\r\n  const handleInputChange = (event, index) => {\r\n    const { name, value } = event.target;\r\n    setAmountbid((prevState) => {\r\n      const updatedState = [...prevState];\r\n      updatedState[index] = { ...updatedState[index], [name]: value };\r\n      return updatedState;\r\n    });\r\n    setManualbidindex(index);\r\n    // console.log(manualbidIndex);\r\n  };\r\n\r\n  //bidder modal\r\n  const openLot = async () => {\r\n    await axios\r\n      .get(`${API_URL}/getselectbroker`)\r\n      .then((response) => {\r\n        socket.emit(\"user\", response.data[0].current_brokers);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    dispatch(getAllcatalogue);\r\n    setShow(true);\r\n  };\r\n\r\n  //manuall bid data insert\r\n\r\n  const addBid = async (el, index) => {\r\n    const mxbid = el.maximum_bid;\r\n    const percent = mxbid * 0.5;\r\n    const eligiblebid = mxbid + percent;\r\n    const bidValue = amountBid[index]?.name;\r\n  \r\n    if (!bidValue) {\r\n      setManualmode(false);\r\n      return;\r\n    }\r\n  \r\n    if (mxbid !== 0 && bidValue < mxbid) {\r\n      alert(\"Bid value should be greater than or equal to the maximum bid.\");\r\n      return;\r\n    }\r\n  \r\n    if (bidValue > eligiblebid && mxbid !== 0) {\r\n      alert(\"You can only bid up to 50% of the maximum bid.\");\r\n      return;\r\n    }\r\n    setbidLoading(true);\r\n    const bidsToUpdate = {\r\n      id: el.id,\r\n      bid: bidValue,\r\n      buyer: users.link_id,\r\n    };\r\n  \r\n    try {\r\n      await axios.put(`${API_URL}/manualbid`, bidsToUpdate);\r\n      socket.emit(\"user\", activebroker);\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setManualmode(false);\r\n    setbidLoading(false);\r\n   \r\n  };\r\n  \r\n  // let timer = null;\r\n  const handleFetchData = debounce(() => {\r\n    axios\r\n      .get(`${API_URL}/getselectbroker`)\r\n      .then((response) => {\r\n        if (response.data[0].auction === 0) {\r\n          setShowPopup(true);\r\n        } else {\r\n          setShowPopup(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        // Handle the error appropriately (e.g., show an error message)\r\n      });\r\n  }, 300);\r\n  // Visibility change handler\r\n  const handleVisibilityChange = () => {\r\n    if (document.visibilityState === \"visible\") {\r\n      // window.location.reload();\r\n      // clearTimeout(timer);\r\n      handleFetchData()\r\n    } else {\r\n      // window.location.reload();\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const minimizeStatus = () => {\r\n  //     if (document.hidden) {\r\n  //       socket.off(\"time\");\r\n  //       // Disconnect socket when app becomes hidden\r\n  //       // socket.disconnect();\r\n  //     } else {\r\n  //       // Reconnect socket when app becomes visible\r\n  //       // socket.connect();\r\n  //       setTime(0)\r\n  //       const handleStartIndex = (data) => {\r\n  //         setStartIndex(data);\r\n  //         // console.log(data);\r\n  //       };\r\n  //       const handleEndIndex = (data) => {\r\n  //         setEndIndex(data);\r\n  //       };\r\n  //       const handleTimeUpdate = (newTime) => {\r\n  //         if(newTime===0){\r\n  //           const notifym = new Audio(notify);\r\n  //           notifym.play()\r\n  //          }\r\n  //         setTime(newTime);\r\n  //       };\r\n    \r\n  //       socket.on('visibility', (state) => {\r\n  //         setShowPopup(state);\r\n  //       });\r\n  //       socket.on('startIn', (startIndex) => {\r\n  //         setStartIndex(startIndex);\r\n  //       });\r\n    \r\n  //       // Listen for 'endIn' event\r\n  //       socket.on('endIn', (endIndex) => {\r\n  //         console.log(`w`+endIndex);\r\n  //         setEndIndex(endIndex);\r\n  //       });\r\n  //       // socket.on(\"updateIndexes\", ({ startIndex, endIndex }) => {\r\n  //       //   // Handle the updated indexes received from the backend\r\n  //       //   console.log(\"Received updated indexes:\", startIndex, endIndex);\r\n  //       //   setStartIndex(startIndex);\r\n  //       //   setEndIndex(endIndex);\r\n  //       //   // Perform any necessary operations with the updated indexes\r\n  //       //   // Update your frontend UI or execute relevant logic based on the updated indexes\r\n  //       // });\r\n  //       // socket.on(\"startIndex\", handleStartIndex);\r\n  //       // socket.on(\"endIndex\", handleEndIndex);\r\n  //       socket.on(\"time\", handleTimeUpdate);\r\n  //       return () => {\r\n \r\n  //         // socket.off(\"startIndex\", handleStartIndex);\r\n  //         // socket.off(\"endIndex\", handleEndIndex);\r\n  //         socket.off(\"time\");\r\n  //         socket.off(\"startIn\");\r\n  //         socket.off(\"endIn\");\r\n  //       };\r\n  //     }\r\n  //   };\r\n\r\n  //   // Create socket connection\r\n  \r\n\r\n  //   document.addEventListener('visibilitychange', minimizeStatus);\r\n\r\n  //   return () => {\r\n  //     document.removeEventListener('visibilitychange', minimizeStatus);\r\n  //     // Disconnect socket on component unmount\r\n  //     // socket.disconnect();\r\n  //   };\r\n  // }, []);\r\n\r\n\r\n  const handleKeyPress = (el,event,index) => {\r\n    if (event.key === 'Enter') {\r\n      addBid(el, index)\r\n      // alert('k')\r\n      // Call your function here\r\n      // Replace `yourFunctionName` with the actual function you want to call\r\n      // yourFunctionName();\r\n    }\r\n  };\r\n  //sharebid\r\n  \r\n    const shareBid = (id) => {\r\n      // Create a payload object with the data to be sent\r\n      const payload = {\r\n        id: id,\r\n        u_id:users.id\r\n        // Include any other data needed for the request\r\n      };\r\n    console.log(payload.id);\r\n      // Make a POST request using Axios\r\n      axios\r\n        .post(`${API_URL}/updateshareauction`, payload)\r\n        .then((response) => {\r\n          // Handle the response if needed\r\n          socket.emit(\"user\", activebroker);\r\n          console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          // Handle the error if needed\r\n          console.error(error);\r\n        });\r\n    };\r\n\r\n    const openShareBid = (id) => {\r\n      // Create a payload object with the data to be sent\r\n      const payload = {\r\n        id: id,\r\n        u_id:users.id\r\n        // Include any other data needed for the request\r\n      };\r\n\r\n      // Make a POST request using Axios\r\n      axios\r\n        .post(`${API_URL}/enableshareauction`, payload)\r\n        .then((response) => {\r\n          // Handle the response if needed\r\n          socket.emit(\"user\", activebroker);\r\n          console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          // Handle the error if needed\r\n          console.error(error);\r\n        });\r\n    };\r\n    \r\n    const currentPage = Math.floor(startIndex / 4) + 1;\r\n  //bid update\r\n  const handleInc = async (el, index) => {\r\n    setDisabledButtons((prevDisabledButtons) => [\r\n      ...prevDisabledButtons,\r\n      index,\r\n    ]);\r\n    setbidLoading(true);\r\n    const audio = new Audio(music);\r\n\r\n    const updatedData = list.map((obj, idx) => {\r\n      if (obj.id === el.id) {\r\n        return {\r\n          ...obj,\r\n          maximum_bid: obj.maximum_bid + 1,\r\n          buyer: users.link_id,\r\n          key: idx,\r\n        };\r\n      }\r\n      return { ...obj, key: idx };\r\n    });\r\n\r\n    const filteredData = updatedData.filter((item) => item.id === el.id);\r\n\r\n    try {\r\n      await axios.put(`${API_URL}/updateauction`, filteredData);\r\n      socket.emit(\"user\", activebroker);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setList(updatedData);\r\n      audio.play();\r\n      setbuttonLoading(false);\r\n      setbidLoading(false);\r\n      setDisabledButtons((prevDisabledButtons) =>\r\n        prevDisabledButtons.filter((btnIndex) => btnIndex !== index)\r\n      );\r\n    }\r\n  };\r\n\r\n  //prev next index check\r\n  useEffect(() => {\r\n    const handleActiveUsers = (count) => {\r\n      setActiveUsers(count);\r\n    };\r\n    const handleStartIndex = (data) => {\r\n      setStartIndex(data);\r\n    };\r\n    const handleEndIndex = (data) => {\r\n      setEndIndex(data);\r\n    };\r\n\r\n    fetchLatestMessage();\r\n\r\n  socket.on('newMessage', (message) => {\r\n  setMessages(message)\r\n  });\r\n\r\n    socket.on(\"activeUsers\", handleActiveUsers);\r\n    socket.on(\"startIndex\", handleStartIndex);\r\n    socket.on(\"endIndex\", handleEndIndex);\r\n    socket.emit(\"getObjects\");\r\n    return () => {\r\n      socket.off(\"activeUsers\", handleActiveUsers);\r\n      socket.off(\"startIndex\", handleStartIndex);\r\n      socket.off(\"endIndex\", handleEndIndex);\r\n      socket.off(\"newMessage\");\r\n    };\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    let isMounted = true;\r\n    try {\r\n      const response = await axios.get(`${API_URL}/getselectbroker`);\r\n      if (isMounted) {\r\n        const { auction, current_brokers, name, id } = response.data[0];\r\n        if (auction === 0) {\r\n          setShowPopup(true);\r\n        } else {\r\n          setShowPopup(false);\r\n        }\r\n\r\n        Promise.all([\r\n          setCheckedItemName(name),\r\n          setCheckedItemid(id),\r\n          setActivebroker(current_brokers),\r\n        ]).then(() => {\r\n          socket.emit(\"user\", current_brokers);\r\n          // socket.emit(\"user_toggle\", current_brokers); need\r\n          socket.on(\"user_toggle\", (userId) => {\r\n            setVisible(userId === users.link_id);\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const socket = io.connect(process.env.REACT_APP_SERVER_URL);\r\n    // Listen for 'startIn' event\r\n    socket.on('startIn', (startIndex) => {\r\n      setStartIndex(startIndex);\r\n    });\r\n\r\n    // Listen for 'endIn' event\r\n    socket.on('endIn', (endIndex) => {\r\n      setEndIndex(endIndex);\r\n    });\r\n\r\n    // Listen for 'visibilitychange' event to handle page visibility changes\r\n    const handleVisibilityChange = () => {\r\n      if (!document.hidden) {\r\n        // Page is visible, request the updated 'endIndex' value\r\n        socket.emit('getEndIndex');\r\n      }\r\n    };\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n\r\n    // Set up a timer to periodically request the updated 'endIndex' value\r\n    const timer = setInterval(() => {\r\n      socket.emit('getEndIndex');\r\n    }, 5000); // Adjust the interval as needed\r\n\r\n    // Clean up the socket connection and event listener when the component unmounts\r\n    return () => {\r\n      socket.disconnect();\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    let isMounted = true; // Add a flag to track if the component is mounted\r\n\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n\r\n    const handleStart = () => {\r\n      setIsRunning(true);\r\n    };\r\n\r\n    const handleStop = () => {\r\n      setIsRunning(false);\r\n    };\r\n\r\n    const handleTimeUpdate = (newTime) => {\r\n      if(newTime===0){\r\n        const notifym = new Audio(notify);\r\n        notifym.play()\r\n       }\r\n      setTime(newTime);\r\n    };\r\n    // Clean up socket listeners\r\n    // socket.on(\"visibility\", handleVisibilityChange);\r\n    socket.on(\"start\", handleStart);\r\n    socket.on(\"stop\", handleStop);\r\n    socket.on(\"time\", handleTimeUpdate);\r\n\r\n    fetchData();\r\n\r\n    socket.on(\"users\", (data) => {\r\n      if (isMounted) {\r\n        // Update the state only if the component is still mounted\r\n        const filteredData = data.filter((item) => item.sold_status === 0);\r\n        setList(data);\r\n        setrawList(data);\r\n      }\r\n    });\r\n    socket.on(\"updateIndexes\", ({ startIndex, endIndex }) => {\r\n      // Handle the updated indexes received from the backend\r\n      console.log(\"Received updated indexes:\", startIndex, endIndex);\r\n      setStartIndex(startIndex);\r\n      setEndIndex(endIndex);\r\n      // Perform any necessary operations with the updated indexes\r\n      // Update your frontend UI or execute relevant logic based on the updated indexes\r\n    });\r\n    socket.on(\"checkname\", (data) => {\r\n      if (isMounted) {\r\n        // Update the state only if the component is still mounted\r\n        setCheckedItemName(data);\r\n      }\r\n    });\r\n    socket.on('visibility', (state) => {\r\n      setShowPopup(state);\r\n    });\r\n    socket.on('startIn', (startIndex) => {\r\n      setStartIndex(startIndex);\r\n    });\r\n\r\n    // Listen for 'endIn' event\r\n    socket.on('endIn', (endIndex) => {\r\n      setEndIndex(endIndex);\r\n    });\r\n    return () => {\r\n      isMounted = false; // Set the flag to false when the component is unmounted\r\n      // Remove socket listeners\r\n      socket.off(\"visibility\");\r\n      socket.off(\"updateIndexes\");\r\n      socket.off(\"start\", handleStart);\r\n      socket.off(\"stop\", handleStop);\r\n      socket.off(\"time\", handleTimeUpdate);\r\n      socket.off(\"users\");\r\n      socket.off(\"checkname\");\r\n      socket.off(\"user_toggle\");\r\n    };\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    // dispatch(getAuctiondetails());\r\n    // const handleVisibilityChange = (value) => {\r\n    //   setShowPopup(value);\r\n    //   localStorage.setItem(\"isVisible\", value);\r\n    // };\r\n\r\n    const handleStart = () => {\r\n      setIsRunning(true);\r\n    };\r\n\r\n    const handleStop = () => {\r\n      setIsRunning(false);\r\n    };\r\n\r\n    const handleTimeUpdate = (newTime) => {\r\n      setTime(newTime);\r\n    };\r\n\r\n    const handleActiveUsers = (count) => {\r\n      setActiveUsers(count);\r\n    };\r\n\r\n    const handleStartIndex = (data) => {\r\n      setStartIndex(data);\r\n    };\r\n\r\n    const handleEndIndex = (data) => {\r\n      setEndIndex(data);\r\n    };\r\n\r\n    socket.on(\"updateIndexes\", ({ startIndex, endIndex }) => {\r\n      // Handle the updated indexes received from the backend\r\n      console.log(\"Received updated indexes:\", startIndex, endIndex);\r\n      setStartIndex(startIndex);\r\n      setEndIndex(endIndex);\r\n      // Perform any necessary operations with the updated indexes\r\n      // Update your frontend UI or execute relevant logic based on the updated indexes\r\n    });\r\n    \r\n    // socket.on(\"visibility\", handleVisibilityChange);\r\n    socket.on(\"start\", handleStart);\r\n    socket.on(\"stop\", handleStop);\r\n    socket.on(\"time\", handleTimeUpdate);\r\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      // clearTimeout(timeoutId);\r\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n      // socket.off(\"visibility\", handleVisibilityChange);\r\n      socket.off(\"start\", handleStart);\r\n      socket.off(\"stop\", handleStop);\r\n      socket.off(\"time\", handleTimeUpdate);\r\n      socket.off(\"updateIndexes\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n    if (isRunning) {\r\n      // setShowPopup(false)\r\n      const throttledTick = throttle(() => {\r\n        socket.emit(\"tick\");\r\n      }, 1000);\r\n      intervalId = setInterval(throttledTick, 1000);\r\n    } else {\r\n      // setShowPopup(true)\r\n      clearInterval(intervalId); // Clear the interval if isRunning is false\r\n    }\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [isRunning]);\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    const seconds = (time % 60).toString().padStart(2, \"0\");\r\n    return `${minutes}:${seconds}`;\r\n  };\r\n\r\n  const filteredData = rawlist.filter((item) => item.buyer === users.link_id);\r\n  const filteredDatabrokers = rawlist.filter(\r\n    (item) => item.brokers === checkedItemid && item.buyer != 0\r\n  );\r\n// messagesection\r\nconst [messages, setMessages] = useState([]);\r\n\r\n\r\nconst fetchLatestMessage = () => {\r\n  axios\r\n    .get(`${API_URL}/messages/latest`) // Replace with your server endpoint\r\n    .then((response) => {\r\n      // console.log(response.data);\r\n      setMessages(response.data);\r\n    })\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst handleMessageSubmit = (e,message) => {\r\n  e.preventDefault();\r\n  const short_name = users.short_name;\r\n  axios\r\n    .post(`${API_URL}/messages`, { message ,short_name}) // Replace with your server endpoint\r\n    .then((response) => {\r\n      setMessage('');\r\n      socket.on('newMessage', (message) => {\r\n        setMessages(message)\r\n        });\r\n    \r\n    })\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\n\r\nconst [message, setMessage] = useState('');\r\n\r\n  return (\r\n    <>\r\n      {bidloading ? (\r\n        <>\r\n          <div className=\"overlay\">\r\n            <div className=\"spinner-container\">\r\n              <div className=\"spinner\"></div>\r\n              <span>Verifying data...</span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {loading && users.type !== \"\" ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              height: \"100vh\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <ReactLoading\r\n              type={\"spin\"}\r\n              color={\"#007bff\"}\r\n              height={50}\r\n              width={50}\r\n            />\r\n            <div\r\n              style={{\r\n                marginTop: \"20px\",\r\n                fontSize: \"16px\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Verifying Data...\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Modal\r\n            title=\"My Lot\"\r\n            onClose={() => setShow(false)}\r\n            show={show}\r\n            filteredData={\r\n              users.type === \"BROKERS\" ? filteredDatabrokers : filteredData\r\n            }\r\n          ></Modal>\r\n\r\n          <div className=\"section-head sec-h\">\r\n            <p className=\"br-n\">={checkedItemName}=</p>\r\n            <div className=\"row newc\">\r\n              <div className=\"col-7 col-md-9 card-btn leftCard\">\r\n                <h2>\r\n                  Auction Date:{\" \"}\r\n                  {auction_data.length === 0 ? \"\" : auction_data[0].date}{\" \"}\r\n                </h2>\r\n                <p>\r\n                  SALE NO - #\r\n                  {auction_data.length === 0 ? \"\" : auction_data[0].sale_no}{\" \"}\r\n                  {activeUsers}{\" \"}\r\n                </p>\r\n                <p>\r\n                  Season - #\r\n                  {auction_data.length === 0 ? \"\" : auction_data[0].season}{\" \"}\r\n                </p>\r\n                <p>\r\n                  CURRENT BROKER :{\" \"}\r\n                  <span className=\"c_brokers\">{checkedItemName}</span>{\" \"}\r\n                </p>\r\n\r\n                <div className=\" row margin-left\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={openLot}\r\n                    className=\"col-5 buttonGroup btn btn-success my-btn\"\r\n                  >\r\n                    My Lot\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-5 col-md-3 align-items-center justify-content-center mt-5 rCard\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"row rightCard\">\r\n                      <div className=\" \">\r\n                        <div className=\"col-md-12 count-t\">\r\n                          <h2 className=\"text-center mh2\">\r\n                            {formatTime(time)}\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-12 name-t\">\r\n                          <h2 className=\"mh2 text-center\">\r\n                            {users.short_name}\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"col-md-12 name-t mh3\">\r\n                        <h4 className=\" text-center\">\r\n                          Total : {list.length} Lot\r\n                        </h4>\r\n                       \r\n                      </div>\r\n                      <div className=\"col-md-12 name-t mh3\">\r\n                      <h4 className=\" text-center\">\r\n                          Current Page : {currentPage} \r\n                        </h4>\r\n                       \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card p-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6 col-md-3 d-flex justify-content-start align-items-center\">\r\n        <div className=\"col\">\r\n    <label className=\"visually-hidden\" htmlFor=\"inline-form-website\">Message</label>\r\n    <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Message\"\r\n        />  </div>\r\n  <div className=\"col\">\r\n    <button type=\"submit\" onClick={(e)=>handleMessageSubmit(e,message)} className=\"btn btn-primary\">Send</button>\r\n  </div>\r\n        </div>\r\n        <div className=\"col-6 col-md-9 d-flex justify-content-end\">\r\n          <span style={{ backgroundColor: 'red',color:'white', padding: '5px', fontSize: '12px' }}>Last Message</span>\r\n          <span style={{ backgroundColor: 'white',color:'black', padding: '5px', fontSize: '12px' }}>{messages.message}</span>\r\n          <span style={{ backgroundColor: 'blue',color:'white', padding: '5px', fontSize: '12px' }}>{messages.u_id}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n          {showPopup && users.type === \"BIDDER\" ? (\r\n            <>\r\n              <h2 className=\"text-center  p-h\">-={users.type} PANEL=-</h2>\r\n              <Popup />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h2 className=\"text-center p-h\">-={users.type} PANEL=-</h2>\r\n              <div className=\"table-container con\">\r\n                <div className=\"row g-1 bid-table\">\r\n                  <table id=\"auction\" className=\"table table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">\r\n                          Lot <br />\r\n                          Invoice\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Factory\r\n                          <br />\r\n                          Grade\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Price\r\n                          <br />\r\n                          Qty\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Highest\r\n                          <br /> Buyer\r\n                        </th>\r\n\r\n                        <th scope=\"col\">Bid</th>\r\n                        <th scope=\"col\">Share</th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <LotListComponent\r\n                      handleKeyPress={handleKeyPress}\r\n                        uId={users.link_id}\r\n                        openShareBid={openShareBid}\r\n                        shareBid={shareBid}\r\n                        time={time}\r\n                        list={list}\r\n                        startIndex={startIndex}\r\n                        endIndex={endIndex}\r\n                        users={users}\r\n                        formatTime={formatTime}\r\n                        manualmode={manualmode}\r\n                        selectedIndex={selectedIndex}\r\n                        handleInputChange={handleInputChange}\r\n                        addBid={addBid}\r\n                        handleInc={handleInc}\r\n                        disabledButtons={disabledButtons}\r\n                        setManualmode={setManualmode}\r\n                        setSelectedIndex={setSelectedIndex}\r\n                      />\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"\">\r\n                <div className=\"row\">\r\n                  {list.slice(startIndex-4, endIndex-4 + 3).map((el, index) => (\r\n                   <>\r\n                   <div className=\"col-6 col-md-3\">\r\n                    <div className=\"card\">\r\n                      <div className={el.sold_status===0?\"rem-card-x\":\"rem-card-y\"}>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-8\">\r\n                            <div className=\"col-12\">\r\n                              <p className=\"rem-text\">{el.factory_name} ({el.lot})</p>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                              <p className=\"rem-text\">{el.buyer_name}({el.maximum_bid - el.price})</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className={`col-4 d-flex align-items-center justify-content-center ${el.sold_status === 0 ? 'btcls' : 'btctik'}`}>\r\n \r\n                            <div className=\"row\">\r\n                              <div className=\"col-12 \">\r\n                                <i className={el.sold_status===0?\"bi bi-x-circle \":\"bi bi-check2-circle\"}></i>\r\n                              </div>\r\n                            \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                   </>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              </div>\r\n              \r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bidders;\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport ViewList from \"./auction/Bidders\";\r\n\r\nconst Bidders = () => {\r\n  const history = useNavigate();\r\n \r\n  const API_URL = process.env.REACT_APP_SERVER_URL;\r\n  const signout = () => {\r\n    sessionStorage.removeItem('token');\r\n    history('/');\r\n  };\r\n  \r\n \r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (!token) {     // If there is no token, the user is not authenticated, so you can redirect them to the desired page\r\n      history('/');\r\n    } else {\r\n      history('/bidders');\r\n    }\r\n  }, []);\r\n  \r\n  // useEffect(() => {\r\n  //   const token = sessionStorage.getItem('token');\r\n  \r\n  //   Axios.get(`${API_URL}/verify`, {\r\n  //     headers: {\r\n  //       Authorization: `Bearer ${token}`\r\n  //     }\r\n  //   })\r\n  //     .then((res) => {\r\n  //       if (res.data.Status === \"Success\") {\r\n  //         history(\"/bidders\");\r\n  //       } else {\r\n  //         history(\"/\");\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(error);\r\n  //     });\r\n  // }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n       <section className=\"content-header\">\r\n\r\n</section>\r\n      <section className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <ViewList />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bidders;\r\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}